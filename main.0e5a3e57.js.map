{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","table","employees","headers","children","POS_RIGHT","POS_TOP","NOTIFICATION_OFFSET","MIN_NAME_LENGTH","MIN_AGE","MAX_AGE","OFFICES","FORM_FIELDS","name","type","options","sortingMethod","sortTable","e","target","tagName","sortBy","innerText","index","findIndex","header","callback","setSortingMethod","toLowerCase","compareStrings","compareNumbers","sortedList","sort","a","b","employee","append","selectRow","forEach","classList","remove","closest","add","submitForm","preventDefault","formData","FormData","formDataObj","Object","fromEntries","entries","errors","validateForm","keys","length","handleErrors","notificationText","addEmployee","pushNotification","editCell","initialValue","input","createElement","setCellValue","ev","cell","newValue","value","innerHTML","addEventListener","key","removeEventListener","addForm","fields","form","submitButton","field","inputName","inputType","addInput","container","label","capitalize","dataset","qa","item","option","stringA","stringB","asc","localeCompare","numA","getNumber","numB","line","replace","charAt","toUpperCase","substring","hasEmptyFields","values","some","filled","age","errorTexts","i","title","text","posTop","posRight","description","notification","style","top","right","setTimeout","info","employeeName","position","office","salary","stringifySalary","toLocaleString","firstChild"],"mappings":"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","file":"main.0e5a3e57.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst body = document.querySelector('body');\r\nconst table = document.querySelector('table');\r\nconst employees = document.querySelector('tbody');\r\nconst headers = document.querySelector('thead').children[0].children;\r\nconst POS_RIGHT = 10;\r\nconst POS_TOP = 10;\r\nconst NOTIFICATION_OFFSET = 140;\r\nconst MIN_NAME_LENGTH = 4;\r\nconst MIN_AGE = 18;\r\nconst MAX_AGE = 90;\r\nconst OFFICES = [\r\n  'Tokyo',\r\n  'Singapore',\r\n  'London',\r\n  'New York',\r\n  'Edinburgh',\r\n  'San Francisco'];\r\nconst FORM_FIELDS = [\r\n  {\r\n    name: 'name',\r\n    type: 'text',\r\n  },\r\n  {\r\n    name: 'position',\r\n    type: 'text',\r\n  },\r\n  {\r\n    name: 'office',\r\n    type: 'select',\r\n    options: OFFICES,\r\n  },\r\n  {\r\n    name: 'age',\r\n    type: 'number',\r\n  },\r\n  {\r\n    name: 'salary',\r\n    type: 'number',\r\n  },\r\n];\r\nlet sortingMethod = {};\r\n\r\n[...headers].forEach(header => {\r\n  const container = document.createElement('span');\r\n\r\n  container.append(header.firstChild);\r\n  header.append(container);\r\n});\r\n\r\nfunction sortTable(e) {\r\n  if (e.target.tagName !== 'SPAN') {\r\n    return;\r\n  }\r\n\r\n  const sortBy = e.target.innerText;\r\n  const index = [...headers].findIndex(header => header.innerText === sortBy);\r\n  let callback = null;\r\n\r\n  setSortingMethod(sortBy);\r\n\r\n  switch (sortBy.toLowerCase()) {\r\n    case 'name':\r\n    case 'position':\r\n    case 'office':\r\n      callback = compareStrings;\r\n      break;\r\n    case 'age':\r\n    case 'salary':\r\n      callback = compareNumbers;\r\n      break;\r\n  }\r\n\r\n  const sortedList = [...employees.children].sort((a, b) => {\r\n    return callback(a, b, index);\r\n  });\r\n\r\n  for (const employee of sortedList) {\r\n    employees.append(employee);\r\n  }\r\n}\r\n\r\nfunction selectRow(e) {\r\n  [...employees.children].forEach(employee => {\r\n    employee.classList.remove('active');\r\n  });\r\n\r\n  e.target.closest('tr').classList.add('active');\r\n}\r\n\r\nfunction submitForm(e) {\r\n  e.preventDefault();\r\n\r\n  const formData = new FormData(e.target);\r\n  const formDataObj = Object.fromEntries(formData.entries());\r\n  const errors = validateForm(formDataObj);\r\n\r\n  if (Object.keys(errors).length > 0) {\r\n    handleErrors(errors);\r\n  } else {\r\n    const notificationText = `${formDataObj.name} was added to the list!`;\r\n\r\n    addEmployee(formDataObj);\r\n\r\n    pushNotification(POS_TOP, POS_RIGHT,\r\n      'New employee added', notificationText, 'success');\r\n  }\r\n}\r\n\r\nfunction editCell(e) {\r\n  const initialValue = e.target.innerText;\r\n  const input = document.createElement('input');\r\n\r\n  e.target.innerHTML = '';\r\n\r\n  input.classList.add('cell-input');\r\n  input.type = 'text';\r\n  input.value = initialValue;\r\n  e.target.append(input);\r\n\r\n  function setCellValue(ev) {\r\n    const cell = ev.target.closest('td');\r\n    const newValue = ev.target.value;\r\n\r\n    cell.innerText = `${newValue || initialValue}`;\r\n    input.remove();\r\n  }\r\n\r\n  input.addEventListener('keydown', (ev) => {\r\n    if (ev.key !== 'Enter') {\r\n      return;\r\n    }\r\n\r\n    input.removeEventListener('blur', setCellValue);\r\n    setCellValue(ev);\r\n  });\r\n\r\n  input.addEventListener('blur', setCellValue);\r\n}\r\n\r\nfunction addForm(fields) {\r\n  const form = document.createElement('form');\r\n  const submitButton = document.createElement('button');\r\n\r\n  form.classList.add('new-employee-form');\r\n  submitButton.innerText = 'Save to table';\r\n  submitButton.type = 'submit';\r\n\r\n  fields.forEach(field => {\r\n    const { name: inputName, type: inputType, options } = field;\r\n\r\n    addInput(form, inputName, inputType, options);\r\n  });\r\n\r\n  form.append(submitButton);\r\n  body.append(form);\r\n};\r\n\r\nfunction addInput(container, inputName, inputType, options) {\r\n  const label = document.createElement('label');\r\n  const input = document.createElement(`${\r\n    inputType === 'select'\r\n      ? 'select'\r\n      : 'input'}`\r\n  );\r\n\r\n  label.innerText = `${capitalize(inputName)}: `;\r\n  input.name = inputName;\r\n  input.dataset.qa = inputName;\r\n\r\n  if (inputType === 'select') {\r\n    options.forEach(item => {\r\n      const option = document.createElement('option');\r\n\r\n      option.value = item;\r\n      option.innerText = item;\r\n      input.append(option);\r\n    });\r\n  } else {\r\n    input.type = inputType;\r\n  }\r\n\r\n  label.append(input);\r\n  container.append(label);\r\n}\r\n\r\nfunction compareStrings(a, b, index) {\r\n  const stringA = a.children[index].innerText;\r\n  const stringB = b.children[index].innerText;\r\n\r\n  return sortingMethod.asc\r\n    ? stringA.localeCompare(stringB)\r\n    : stringB.localeCompare(stringA);\r\n}\r\n\r\nfunction compareNumbers(a, b, index) {\r\n  const numA = getNumber(a.children[index].innerText);\r\n  const numB = getNumber(b.children[index].innerText);\r\n\r\n  return sortingMethod.asc ? numA - numB : numB - numA;\r\n}\r\n\r\nfunction getNumber(line) {\r\n  return +line.replace('$', '').replace(',', '');\r\n}\r\n\r\nfunction setSortingMethod(sortBy) {\r\n  if (sortingMethod.sortBy === sortBy) {\r\n    sortingMethod.asc = !sortingMethod.asc;\r\n  } else {\r\n    sortingMethod = {\r\n      sortBy,\r\n      asc: true,\r\n    };\r\n  }\r\n}\r\n\r\nfunction capitalize(line) {\r\n  return `${line.charAt(0).toUpperCase()}${line.substring(1)}`;\r\n}\r\n\r\nfunction validateForm(formData) {\r\n  const hasEmptyFields = Object.values(formData).some(value => value === '');\r\n  const errors = {};\r\n\r\n  if (hasEmptyFields) {\r\n    errors.filled = {\r\n      'title': 'No empty fields',\r\n      'text': 'Every field is required',\r\n    };\r\n\r\n    return errors;\r\n  }\r\n\r\n  if (formData.name.length < MIN_NAME_LENGTH) {\r\n    errors.name = {\r\n      'title': 'Invalid Name value',\r\n      'text': 'Name should be at least 4 characters long',\r\n    };\r\n  }\r\n\r\n  if (formData.age < MIN_AGE || formData.age > MAX_AGE) {\r\n    errors.age = {\r\n      'title': 'Invalid Age field',\r\n      'text': 'Age should be between 18 and 90 years',\r\n    };\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nfunction handleErrors(errors) {\r\n  const errorTexts = Object.values(errors);\r\n\r\n  for (let i = 0; i < errorTexts.length; i++) {\r\n    const { title, text } = errorTexts[i];\r\n\r\n    pushNotification(POS_TOP + NOTIFICATION_OFFSET * i,\r\n      POS_RIGHT, title, text, 'error');\r\n  }\r\n}\r\n\r\nfunction pushNotification(posTop, posRight, title, description, type) {\r\n  const notification = document.createElement('block');\r\n\r\n  notification.classList.add('notification');\r\n  notification.classList.add(type);\r\n  notification.dataset.qa = 'notification';\r\n  notification.style.top = `${posTop}px`;\r\n  notification.style.right = `${posRight}px`;\r\n\r\n  notification.innerHTML = `\r\n    <h2 class=\"title\">${title}</h2>\r\n    <p>${description}</p>\r\n  `;\r\n\r\n  body.append(notification);\r\n\r\n  setTimeout(() => {\r\n    notification.remove();\r\n  }, 5000);\r\n}\r\n\r\nfunction addEmployee(info) {\r\n  const employee = document.createElement('tr');\r\n  const { name: employeeName, position, office, age, salary } = info;\r\n\r\n  employee.innerHTML = `\r\n    <td>${employeeName}</td>\r\n    <td>${position}</td>\r\n    <td>${office}</td>\r\n    <td>${age}</td>\r\n    <td>${stringifySalary(+salary)}</td>\r\n  `;\r\n  employees.append(employee);\r\n}\r\n\r\nfunction stringifySalary(salary) {\r\n  return `$${salary.toLocaleString('en-US')}`;\r\n}\r\n\r\naddForm(FORM_FIELDS);\r\ntable.addEventListener('click', sortTable);\r\nemployees.addEventListener('click', selectRow);\r\nbody.addEventListener('submit', submitForm);\r\nemployees.addEventListener('dblclick', editCell);\r\n"]}